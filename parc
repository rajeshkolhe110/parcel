<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Parcel Label Generator</title>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.10.1/html2pdf.bundle.min.js"></script>
  <link href="https://fonts.googleapis.com/css2?family=Roboto&display=swap" rel="stylesheet">

  <style>
    body {
      font-family: 'Roboto', sans-serif;
      background: #f4f7fa;
      margin: 0;
      padding: 20px;
    }

    .container {
      max-width: 900px;
      margin: auto;
      background: #ffffff;
      border-radius: 12px;
      padding: 30px;
      box-shadow: 0 10px 25px rgba(0,0,0,0.1);
    }

    h2 {
      margin-top: 0;
      text-align: center;
      color: #333;
    }

    label {
      font-weight: 600;
      margin-top: 15px;
      display: block;
      color: #333;
    }

    textarea, select, input {
      width: 100%;
      padding: 10px;
      margin-top: 5px;
      margin-bottom: 15px;
      border: 1px solid #ccc;
      border-radius: 6px;
      font-size: 14px;
    }

    .controls {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: 15px;
    }

    .buttons {
      text-align: center;
      margin-top: 20px;
    }

    button {
      background: #007bff;
      color: white;
      padding: 10px 25px;
      border: none;
      border-radius: 8px;
      font-size: 16px;
      margin: 0 10px;
      cursor: pointer;
      transition: background 0.2s ease;
    }

    button:hover {
      background: #0056b3;
    }

    .preview-container {
      margin-top: 30px;
      display: flex;
      justify-content: center;
    }

    .label-page {
      position: relative;
      background: white;
      box-shadow: 0 0 5px rgba(0,0,0,0.2);
      overflow: hidden;
      width: 210mm;
      height: 297mm;
    }

    .label-content {
      position: absolute;
      left: 50%;
      transform: translateX(-50%);
      max-width: 600px;
      width: calc(100% - 40mm);
    }

    .label-content h3 {
      margin: 0 0 4px 0;
      padding: 0;
      font-weight: bold;
      line-height: 1.2;
    }

    .label-content p {
      margin: 0;
      padding: 0;
      white-space: pre-wrap;
    }

    .gap-div {
      height: 10px; /* default adjustable */
    }

  </style>
</head>

<body>

<div class="container">
  <h2>Parcel Label Generator</h2>

  <label>Font Family:</label>
  <select id="fontFamily">
    <option value="Times New Roman" selected>Times New Roman</option>
    <option value="Open Sans">Open Sans</option>
    <option value="Montserrat">Montserrat</option>
    <option value="Arial">Arial</option>
    <option value="Roboto">Roboto</option>
    <option value="Verdana">Verdana</option>
    <option value="Calibri">Calibri</option>
    <option value="Georgia">Georgia</option>
  </select>

  <div class="controls">
    <div>
      <label>Font Size (pt):</label>
      <input type="number" id="fontSize" value="12">
    </div>
    <div>
      <label>Line Spacing:</label>
      <input type="number" id="lineSpacing" value="1.2" step="0.1">
    </div>
    <div>
      <label>Letter Spacing (px):</label>
      <input type="number" id="letterSpacing" value="0.3" step="0.1">
    </div>
    <div>
      <label>Text Position:</label>
      <select id="textPosition">
        <option value="flex-start">Top</option>
        <option value="center" selected>Middle</option>
        <option value="flex-end">Bottom</option>
      </select>
    </div>
    <div>
      <label>Gap Between To & From (px):</label>
      <input type="number" id="toFromGap" value="10" step="1">
    </div>
    <div>
      <label>Page Size:</label>
      <select id="pageSize">
        <option value="a4" selected>A4</option>
        <option value="a3">A3</option>
        <option value="letter">Letter</option>
        <option value="legal">Legal</option>
        <option value="tabloid">Tabloid</option>
      </select>
    </div>
  </div>

  <label>To:</label>
  <textarea id="toText" placeholder="Enter recipient address..."></textarea>

  <label>From:</label>
  <textarea id="fromText">AutoMekz Electronics,
Flat No.2 Ram Heights, Laxmi Nagar,
Mahale Farm, Cidco, Nashik,
Maharashtra
Pincode:- 422009
Contact:- 9503298303</textarea>

  <div class="buttons">
    <button onclick="updatePreview()">Preview</button>
    <button onclick="printLabel()">Print</button>
    <button onclick="downloadPDF()">Save as PDF</button>
  </div>
</div>

<div class="preview-container">
  <div class="label-page" id="labelPreview">
    <div class="label-content" id="labelContent">
      <h3>To,</h3>
      <p id="previewTo"></p>
      <div class="gap-div" id="gapBetween"></div>
      <h3>From,</h3>
      <p id="previewFrom"></p>
    </div>
  </div>
</div>

<script>
function updatePreview() {
  const font = document.getElementById("fontFamily").value;
  const size = document.getElementById("fontSize").value + "pt";
  const line = document.getElementById("lineSpacing").value;
  const letter = document.getElementById("letterSpacing").value + "px";
  const position = document.getElementById("textPosition").value;
  const gapValue = parseInt(document.getElementById("toFromGap").value);

  const labelContent = document.getElementById("labelContent");
  const labelPage = document.getElementById("labelPreview");

  labelContent.style.fontFamily = font;
  labelContent.style.fontSize = size;
  labelContent.style.lineHeight = line;
  labelContent.style.letterSpacing = letter;

  const toText = document.getElementById("toText").value.replace(/\n/g, "<br>");
  const fromText = document.getElementById("fromText").value.replace(/\n/g, "<br>");
  document.getElementById("previewTo").innerHTML = toText;
  document.getElementById("previewFrom").innerHTML = fromText;

  // Set the custom gap
  document.getElementById("gapBetween").style.height = gapValue + "px";

  labelContent.style.visibility = "hidden";
  labelContent.style.top = "0";
  labelContent.style.bottom = "auto";
  labelContent.style.marginTop = "0";
  labelContent.style.visibility = "visible";

  setTimeout(() => {
    const contentHeight = labelContent.offsetHeight;
    const pageHeight = labelPage.offsetHeight;

    if (position === "flex-start") {
      labelContent.style.top = "30mm";
    } else if (position === "center") {
      const offset = (pageHeight - contentHeight) / 2;
      labelContent.style.top = offset + "px";
    } else if (position === "flex-end") {
      const offset = pageHeight - contentHeight - 30;
      labelContent.style.top = offset + "px";
    }
  }, 0);
}

function printLabel() {
  updatePreview();
  const printWindow = window.open('', '', 'width=800,height=1000');
  const content = document.getElementById("labelPreview").innerHTML;
  printWindow.document.write(`
    <html><head><title>Print</title>
    <style>
      body { margin: 0; font-family: ${document.getElementById("fontFamily").value}; }
      .label-content { width: 100%; padding: 30mm 20mm; box-sizing: border-box; }
    </style>
    </head><body>${content}</body></html>`);
  printWindow.document.close();
  printWindow.focus();
  printWindow.print();
}

function downloadPDF() {
  updatePreview();
  const toLines = document.getElementById("toText").value.trim().split('\n');
  const firstLine = toLines[0] || 'Label';
  const firstWord = firstLine.split(' ')[0] || 'Label';
  const filename = `Parcel_${firstWord}.pdf`;

  const pageSize = document.getElementById("pageSize").value;

  const element = document.getElementById("labelPreview");
  html2pdf().set({
    margin: 0,
    filename: filename,
    html2canvas: { scale: 2 },
    jsPDF: { unit: 'mm', format: pageSize, orientation: 'portrait' },
    pagebreak: { mode: ['avoid-all'] }
  }).from(element).save();
}

window.onload = updatePreview;
</script>

</body>
</html>
